@inproceedings{shen_towards_2023,
  title = {Towards {{Automated Identification}} of {{Layering Violations}} in {{Embedded Applications}} ({{WIP}})},
  booktitle = {Proceedings of the 24th {{ACM SIGPLAN}}/{{SIGBED International Conference}} on {{Languages}}, {{Compilers}}, and {{Tools}} for {{Embedded Systems}} ({{LCTES}})},
  author = {Shen, Mingjie and Davis, James C. and Machiry, Aravind},
  year = {2023},
  month = jun,
  series = {{{LCTES}} 2023},
  pages = {143--147},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3589610.3596271},
  urldate = {2023-06-19},
  abstract = {For portability, embedded systems software follows a layered design to reduce dependence on particular hardware behavior. We consider the problem of identifying layering violations: instances where the embedded application accesses non-adjacent layers. This paper presents our preliminary work to detect a class of layering violations called Non Conventional MMIO Accesses (NCMAs). We find them by searching for direct Memory Mapped Input Output (MMIO) accesses made outside of the Hardware Abstraction Layer (HAL). For evaluation, we curated a list of 988 applications spanning 5 Real Time Operating Systems (RTOSes) \textendash{} the first large dataset of compilable embedded applications. Our system identified 369 NCMAs. We reported these issues to the corresponding developers and found interesting reasons for committing layering violations. We have open-sourced our tool and the collected dataset to foster future research.},
  copyright = {All rights reserved},
  isbn = {9798400701740},
  keywords = {Embedded Systems,Firmware,Hardware Abstraction Layer,Portability,Static Analysis},
}

